{
  "version": 3,
  "sources": ["../../../npm/qsharp/lib/web/qsc_wasm.js", "../../../npm/qsharp/dist/log.js", "../../../npm/qsharp/dist/workers/common.js", "../../../npm/qsharp/dist/workers/browser.js", "../../../npm/qsharp/dist/compiler/common.js", "../../../npm/qsharp/dist/compiler/events.js", "../../../npm/qsharp/dist/compiler/compiler.js", "../../../npm/qsharp/dist/compiler/worker-browser.js", "../../src/compiler-worker.ts"],
  "sourcesContent": ["let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_export_2(addHeapObject(e));\n    }\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_3.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_3.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nlet cachedUint32ArrayMemory0 = null;\n\nfunction getUint32ArrayMemory0() {\n    if (cachedUint32ArrayMemory0 === null || cachedUint32ArrayMemory0.byteLength === 0) {\n        cachedUint32ArrayMemory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32ArrayMemory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32ArrayMemory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    const mem = getDataViewMemory0();\n    for (let i = 0; i < array.length; i++) {\n        mem.setUint32(ptr + 4 * i, addHeapObject(array[i]), true);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    const mem = getDataViewMemory0();\n    const result = [];\n    for (let i = ptr; i < ptr + 4 * len; i += 4) {\n        result.push(takeObject(mem.getUint32(i, true)));\n    }\n    return result;\n}\n/**\n * @param {any} callback\n * @param {number} level\n */\nexport function initLogging(callback, level) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.initLogging(retptr, addHeapObject(callback), level);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        if (r1) {\n            throw takeObject(r0);\n        }\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n * @param {number} level\n */\nexport function setLogLevel(level) {\n    wasm.setLogLevel(level);\n}\n\n/**\n * @returns {string}\n */\nexport function git_hash() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.git_hash(retptr);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        deferred1_0 = r0;\n        deferred1_1 = r1;\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_export_4(deferred1_0, deferred1_1, 1);\n    }\n}\n\n/**\n * @param {IProgramConfig} program\n * @returns {string}\n */\nexport function get_qir(program) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_qir(retptr, addHeapObject(program));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        var ptr1 = r0;\n        var len1 = r1;\n        if (r3) {\n            ptr1 = 0; len1 = 0;\n            throw takeObject(r2);\n        }\n        deferred2_0 = ptr1;\n        deferred2_1 = len1;\n        return getStringFromWasm0(ptr1, len1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_export_4(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {IProgramConfig} program\n * @param {string} params\n * @returns {string}\n */\nexport function get_estimates(program, params) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(params, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.get_estimates(retptr, addHeapObject(program), ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_export_4(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {IProgramConfig} program\n * @param {boolean} simulate\n * @param {IOperationInfo | null} [operation]\n * @returns {any}\n */\nexport function get_circuit(program, simulate, operation) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_circuit(retptr, addHeapObject(program), simulate, isLikeNone(operation) ? 0 : addHeapObject(operation));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n * @param {string} name\n * @returns {string | undefined}\n */\nexport function get_library_source_content(name) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(name, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.get_library_source_content(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        let v2;\n        if (r0 !== 0) {\n            v2 = getStringFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_4(r0, r1 * 1, 1);\n        }\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n * @param {string} code\n * @param {string[]} language_features\n * @param {string} profile\n * @returns {string}\n */\nexport function get_ast(code, language_features, profile) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(code, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayJsValueToWasm0(language_features, wasm.__wbindgen_export_0);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(profile, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len2 = WASM_VECTOR_LEN;\n        wasm.get_ast(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        var ptr4 = r0;\n        var len4 = r1;\n        if (r3) {\n            ptr4 = 0; len4 = 0;\n            throw takeObject(r2);\n        }\n        deferred5_0 = ptr4;\n        deferred5_1 = len4;\n        return getStringFromWasm0(ptr4, len4);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_export_4(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @param {string} code\n * @param {string[]} language_features\n * @param {string} profile\n * @returns {string}\n */\nexport function get_hir(code, language_features, profile) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(code, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayJsValueToWasm0(language_features, wasm.__wbindgen_export_0);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(profile, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len2 = WASM_VECTOR_LEN;\n        wasm.get_hir(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        var ptr4 = r0;\n        var len4 = r1;\n        if (r3) {\n            ptr4 = 0; len4 = 0;\n            throw takeObject(r2);\n        }\n        deferred5_0 = ptr4;\n        deferred5_1 = len4;\n        return getStringFromWasm0(ptr4, len4);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_export_4(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @param {IProgramConfig} program\n * @returns {string[]}\n */\nexport function get_rir(program) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_rir(retptr, addHeapObject(program));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_4(r0, r1 * 4, 4);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n * @param {IProgramConfig} program\n * @param {string} expr\n * @param {Function} event_cb\n * @param {number} shots\n * @returns {boolean}\n */\nexport function run(program, expr, event_cb, shots) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(expr, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.run(retptr, addHeapObject(program), ptr0, len0, addBorrowedObject(event_cb), shots);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return r0 !== 0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n * @param {IProgramConfig} program\n * @param {string} expr\n * @param {Function} event_cb\n * @param {number} shots\n * @param {any} pauliNoise\n * @returns {boolean}\n */\nexport function runWithPauliNoise(program, expr, event_cb, shots, pauliNoise) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(expr, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.runWithPauliNoise(retptr, addHeapObject(program), ptr0, len0, addBorrowedObject(event_cb), shots, addBorrowedObject(pauliNoise));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return r0 !== 0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n * @param {string} solution_code\n * @param {any} exercise_sources_js\n * @param {Function} event_cb\n * @returns {boolean}\n */\nexport function check_exercise_solution(solution_code, exercise_sources_js, event_cb) {\n    try {\n        const ptr0 = passStringToWasm0(solution_code, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.check_exercise_solution(ptr0, len0, addHeapObject(exercise_sources_js), addBorrowedObject(event_cb));\n        return ret !== 0;\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n * @param {IProgramConfig | null} [additional_program]\n * @returns {IDocFile[]}\n */\nexport function generate_docs(additional_program) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.generate_docs(retptr, isLikeNone(additional_program) ? 0 : addHeapObject(additional_program));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_export_4(r0, r1 * 4, 4);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction __wbg_adapter_52(arg0, arg1, arg2) {\n    wasm.__wbindgen_export_5(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_198(arg0, arg1, arg2, arg3) {\n    wasm.__wbindgen_export_6(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n * @enum {0 | 1 | 2 | 3 | 4}\n */\nexport const StepResultId = Object.freeze({\n    BreakpointHit: 0, \"0\": \"BreakpointHit\",\n    Next: 1, \"1\": \"Next\",\n    StepIn: 2, \"2\": \"StepIn\",\n    StepOut: 3, \"3\": \"StepOut\",\n    Return: 4, \"4\": \"Return\",\n});\n\nconst DebugServiceFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_debugservice_free(ptr >>> 0, 1));\n\nexport class DebugService {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        DebugServiceFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_debugservice_free(ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.debugservice_new();\n        this.__wbg_ptr = ret >>> 0;\n        DebugServiceFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @param {IProgramConfig} program\n     * @param {string | null} [entry]\n     * @returns {string}\n     */\n    load_program(program, entry) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = isLikeNone(entry) ? 0 : passStringToWasm0(entry, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.debugservice_load_program(retptr, this.__wbg_ptr, addHeapObject(program), ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            deferred2_0 = r0;\n            deferred2_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_export_4(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @returns {IQuantumStateList}\n     */\n    capture_quantum_state() {\n        const ret = wasm.debugservice_capture_quantum_state(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * @returns {any}\n     */\n    get_circuit() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.debugservice_get_circuit(retptr, this.__wbg_ptr);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n     * @returns {IStackFrameList}\n     */\n    get_stack_frames() {\n        const ret = wasm.debugservice_get_stack_frames(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * @param {Function} event_cb\n     * @param {Uint32Array} ids\n     * @returns {IStructStepResult}\n     */\n    eval_next(event_cb, ids) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray32ToWasm0(ids, wasm.__wbindgen_export_0);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.debugservice_eval_next(retptr, this.__wbg_ptr, addBorrowedObject(event_cb), ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n     * @param {Function} event_cb\n     * @param {Uint32Array} ids\n     * @returns {IStructStepResult}\n     */\n    eval_continue(event_cb, ids) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray32ToWasm0(ids, wasm.__wbindgen_export_0);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.debugservice_eval_continue(retptr, this.__wbg_ptr, addBorrowedObject(event_cb), ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n     * @param {Function} event_cb\n     * @param {Uint32Array} ids\n     * @returns {IStructStepResult}\n     */\n    eval_step_in(event_cb, ids) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray32ToWasm0(ids, wasm.__wbindgen_export_0);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.debugservice_eval_step_in(retptr, this.__wbg_ptr, addBorrowedObject(event_cb), ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n     * @param {Function} event_cb\n     * @param {Uint32Array} ids\n     * @returns {IStructStepResult}\n     */\n    eval_step_out(event_cb, ids) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray32ToWasm0(ids, wasm.__wbindgen_export_0);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.debugservice_eval_step_out(retptr, this.__wbg_ptr, addBorrowedObject(event_cb), ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n     * @param {string} path\n     * @returns {IBreakpointSpanList}\n     */\n    get_breakpoints(path) {\n        const ptr0 = passStringToWasm0(path, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.debugservice_get_breakpoints(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n     * @returns {IVariableList}\n     */\n    get_locals() {\n        const ret = wasm.debugservice_get_locals(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nconst LanguageServiceFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_languageservice_free(ptr >>> 0, 1));\n\nexport class LanguageService {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        LanguageServiceFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_languageservice_free(ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.languageservice_new();\n        this.__wbg_ptr = ret >>> 0;\n        LanguageServiceFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @param {(uri: string, version: number | undefined, diagnostics: VSDiagnostic[]) => void} diagnostics_callback\n     * @param {(callables: ITestDescriptor[]) => void} test_callables_callback\n     * @param {IProjectHost} host\n     * @returns {Promise<any>}\n     */\n    start_background_work(diagnostics_callback, test_callables_callback, host) {\n        try {\n            const ret = wasm.languageservice_start_background_work(this.__wbg_ptr, addBorrowedObject(diagnostics_callback), addBorrowedObject(test_callables_callback), addHeapObject(host));\n            return takeObject(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    stop_background_work() {\n        wasm.languageservice_stop_background_work(this.__wbg_ptr);\n    }\n    /**\n     * @param {IWorkspaceConfiguration} config\n     */\n    update_configuration(config) {\n        wasm.languageservice_update_configuration(this.__wbg_ptr, addHeapObject(config));\n    }\n    /**\n     * @param {string} uri\n     * @param {number} version\n     * @param {string} text\n     */\n    update_document(uri, version, text) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(text, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.languageservice_update_document(this.__wbg_ptr, ptr0, len0, version, ptr1, len1);\n    }\n    /**\n     * @param {string} uri\n     */\n    close_document(uri) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.languageservice_close_document(this.__wbg_ptr, ptr0, len0);\n    }\n    /**\n     * @param {string} notebook_uri\n     * @param {INotebookMetadata} notebook_metadata\n     * @param {ICell[]} cells\n     */\n    update_notebook_document(notebook_uri, notebook_metadata, cells) {\n        const ptr0 = passStringToWasm0(notebook_uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayJsValueToWasm0(cells, wasm.__wbindgen_export_0);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.languageservice_update_notebook_document(this.__wbg_ptr, ptr0, len0, addHeapObject(notebook_metadata), ptr1, len1);\n    }\n    /**\n     * @param {string} notebook_uri\n     */\n    close_notebook_document(notebook_uri) {\n        const ptr0 = passStringToWasm0(notebook_uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.languageservice_close_notebook_document(this.__wbg_ptr, ptr0, len0);\n    }\n    /**\n     * @param {string} uri\n     * @param {IRange} range\n     * @returns {ICodeAction[]}\n     */\n    get_code_actions(uri, range) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.languageservice_get_code_actions(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(range));\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var v2 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_4(r0, r1 * 4, 4);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @returns {ICompletionList}\n     */\n    get_completions(uri, position) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.languageservice_get_completions(this.__wbg_ptr, ptr0, len0, addHeapObject(position));\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @returns {ILocation | undefined}\n     */\n    get_definition(uri, position) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.languageservice_get_definition(this.__wbg_ptr, ptr0, len0, addHeapObject(position));\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @param {boolean} include_declaration\n     * @returns {ILocation[]}\n     */\n    get_references(uri, position, include_declaration) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.languageservice_get_references(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(position), include_declaration);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var v2 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_4(r0, r1 * 4, 4);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n     * @param {string} uri\n     * @returns {ITextEdit[]}\n     */\n    get_format_changes(uri) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.languageservice_get_format_changes(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var v2 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_4(r0, r1 * 4, 4);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @returns {IHover | undefined}\n     */\n    get_hover(uri, position) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.languageservice_get_hover(this.__wbg_ptr, ptr0, len0, addHeapObject(position));\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @returns {ISignatureHelp | undefined}\n     */\n    get_signature_help(uri, position) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.languageservice_get_signature_help(this.__wbg_ptr, ptr0, len0, addHeapObject(position));\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @param {string} new_name\n     * @returns {IWorkspaceEdit}\n     */\n    get_rename(uri, position, new_name) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(new_name, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.languageservice_get_rename(this.__wbg_ptr, ptr0, len0, addHeapObject(position), ptr1, len1);\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} uri\n     * @param {IPosition} position\n     * @returns {ITextEdit | undefined}\n     */\n    prepare_rename(uri, position) {\n        const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.languageservice_prepare_rename(this.__wbg_ptr, ptr0, len0, addHeapObject(position));\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} uri\n     * @returns {ICodeLens[]}\n     */\n    get_code_lenses(uri) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(uri, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.languageservice_get_code_lenses(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var v2 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_4(r0, r1 * 4, 4);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst ProjectLoaderFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_projectloader_free(ptr >>> 0, 1));\n/**\n * a minimal implementation for interacting with async JS filesystem callbacks to\n * load project files\n */\nexport class ProjectLoader {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ProjectLoaderFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_projectloader_free(ptr, 0);\n    }\n    /**\n     * @param {IProjectHost} project_host\n     */\n    constructor(project_host) {\n        const ret = wasm.projectloader_new(addHeapObject(project_host));\n        this.__wbg_ptr = ret >>> 0;\n        ProjectLoaderFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @param {string} directory\n     * @returns {Promise<IProjectConfig>}\n     */\n    load_project_with_deps(directory) {\n        const ptr0 = passStringToWasm0(directory, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.projectloader_load_project_with_deps(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_buffer_aa30bbb65cb44323 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_41c7efaf6b1182f8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_aff990758d3576e4 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3), getObject(arg4));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_c45d13337ffb12ac = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_crypto_ed58b8e10a292839 = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_done_362f78ab584a24b5 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_entries_27a445ca6b702f8d = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fetchGithub_8d40e9b8dedfdb81 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        const ret = getObject(arg0).fetchGithub(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4), getStringFromWasm0(arg5, arg6), getStringFromWasm0(arg7, arg8));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_findManifestDirectory_91ae20bc11401cd7 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).findManifestDirectory(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_from_b4bd31c02b6d179c = function(arg0) {\n        const ret = Array.from(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_bcb4912f16000dc4 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_get_01203e6a4116a116 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_e7114b7bf3d9d5f5 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getstacktracelimit_af8b40007957b07f = function() {\n        const ret = Error.stackTraceLimit;\n        return isLikeNone(ret) ? 0x100000001 : (ret) >>> 0;\n    };\n    imports.wbg.__wbg_getwithrefkey_1dc361bd10053bfe = function(arg0, arg1) {\n        const ret = getObject(arg0)[getObject(arg1)];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_globalThis_856ff24a65e13540 = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_fc813a897a497d26 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_8b96bf6c71691dc9 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Error_35d55cc64fb61630 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Error;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Map_cd976ea4854c21db = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Map;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_faa8901ba56cb8e9 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_6836d46c89daf1b6 = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_isSafeInteger_2fb2b4f942993af4 = function(arg0) {\n        const ret = Number.isSafeInteger(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_iterator_773e0b022e7009f4 = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_0a11127664108286 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_length_9aaa2867670f533a = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_listDirectory_827a3459b52ecade = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).listDirectory(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_message_b5668b9cb29859e1 = function(arg0) {\n        const ret = getObject(arg0).message;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_msCrypto_0a36e2ec3a343d26 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_07527e5c188e7771 = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_198(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_new_4c16aab09d1eb450 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_6e254ba4a466646d = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_820d2bbee2d13ba3 = function() {\n        const ret = new Map();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_a774eb7503f03596 = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_db41cf29086ce106 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_29f93ce2db72cd07 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_c8ea72df7687880b = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithlength_60b9d756f80003a6 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_95ee887e1f50209d = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_next_b2690a2dab163f0f = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_02999533c4ea02e3 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_packageGraphSources_a4ff6a84f5812e15 = function(arg0) {\n        const ret = getObject(arg0).packageGraphSources;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_5c1d670bc53614b8 = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_profile_35b65d3ebe7ebbee = function(arg0, arg1) {\n        const ret = getObject(arg1).profile;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_queueMicrotask_98e746b9f850fe3d = function(arg0) {\n        queueMicrotask(getObject(arg0));\n    };\n    imports.wbg.__wbg_queueMicrotask_c847cc8372bec908 = function(arg0) {\n        const ret = getObject(arg0).queueMicrotask;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_randomFillSync_ab2cfe79ebbf2740 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_readFile_69715ec88ba8893d = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).readFile(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_require_79b1e9274cde3c87 = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_resolvePath_589375b90e08e655 = function(arg0, arg1, arg2, arg3, arg4) {\n        const ret = getObject(arg0).resolvePath(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_resolve_03bf127fbf612c20 = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_799f153b0b6e0183 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_set_1f2956726252aaf4 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).set(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_set_e1b9d9ffeee30338 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_set_e97d203fd145cdae = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_setstacktracelimit_1055f99289ff0c7b = function(arg0) {\n        Error.stackTraceLimit = arg0 >>> 0;\n    };\n    imports.wbg.__wbg_stack_ab46af82f81848ee = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_subarray_a984c21c3cf98bbb = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_5c9c71165832b5a1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_d88c104795b9d5aa = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_value_87c720f6568103d1 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_c71aa1626a93e0a1 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_window_cd65fa4478648b49 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_as_number = function(arg0) {\n        const ret = +getObject(arg0);\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n        const v = getObject(arg1);\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getDataViewMemory0().setBigInt64(arg0 + 8 * 1, isLikeNone(ret) ? BigInt(0) : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbindgen_closure_wrapper954 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 377, __wbg_adapter_52);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_in = function(arg0, arg1) {\n        const ret = getObject(arg0) in getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_array = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_bigint = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) === getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint32ArrayMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('qsc_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nlet telemetryCollector = null;\nconst levels = [\"off\", \"error\", \"warn\", \"info\", \"debug\", \"trace\"];\nlet logLevel = 0;\nexport const log = {\n    setLogLevel(level) {\n        if (typeof level === \"string\") {\n            // Convert to number\n            const lowerLevel = level.toLowerCase();\n            let newLevel = 0;\n            levels.forEach((name, idx) => {\n                if (name === lowerLevel)\n                    newLevel = idx;\n            });\n            logLevel = newLevel;\n        }\n        else {\n            logLevel = level;\n        }\n        this.onLevelChanged?.(logLevel);\n    },\n    onLevelChanged: null,\n    getLogLevel() {\n        return logLevel;\n    },\n    error(...args) {\n        if (logLevel >= 1)\n            console.error(...args);\n    },\n    warn(...args) {\n        if (logLevel >= 2)\n            console.warn(...args);\n    },\n    info(...args) {\n        if (logLevel >= 3)\n            console.info(...args);\n    },\n    debug(...args) {\n        if (logLevel >= 4)\n            console.debug(...args);\n    },\n    trace(...args) {\n        // console.trace in JavaScript just writes a stack trace at info level, so use 'debug'\n        if (logLevel >= 5)\n            console.debug(...args);\n    },\n    never(val) {\n        // Utility function to ensure exhaustive type checking. See https://stackoverflow.com/a/39419171\n        log.error(\"Exhaustive type checking didn't account for: %o\", val);\n    },\n    /**\n     * @param level - A number indicating severity: 1 = Error, 2 = Warn, 3 = Info, 4 = Debug, 5 = Trace\n     * @param target - The area or component sending the messsage, e.g. \"parser\" (useful for filtering)\n     * @param args - The format string and args to log, e.g. [\"Index of %s is %i\", str, index]\n     */\n    logWithLevel(level, target, ...args) {\n        const [firstArg, ...trailingArgs] = args;\n        const outArgs = [`[${target || \"\"}] ${firstArg}`, ...trailingArgs];\n        switch (level) {\n            case 1:\n                log.error(...outArgs);\n                break;\n            case 2:\n                log.warn(...outArgs);\n                break;\n            case 3:\n                log.info(...outArgs);\n                break;\n            case 4:\n                log.debug(...outArgs);\n                break;\n            case 5:\n                log.trace(...outArgs);\n                break;\n            default:\n                log.error(\"Invalid logLevel: \", level);\n        }\n    },\n    setTelemetryCollector(handler) {\n        telemetryCollector = handler;\n    },\n    logTelemetry(event) {\n        telemetryCollector?.(event);\n    },\n    isTelemetryEnabled() {\n        return !!telemetryCollector;\n    },\n};\n// Enable globally for easy interaction and debugging in live environments\nglobalThis.qscLog = log;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { log } from \"../log.js\";\n/*\nThe WorkerProxy works by queuing up requests to send over to the Worker, only\never having one in flight at a time. By queuing on the caller side, this allows\nfor cancellation (it checks if a request is cancelled before sending to the worker).\n\nThe queue contains an entry for each request with the data to send, the promise\nto resolve, the event handler, and the cancellation token. When a request completes\nthe next one (if present) is fetched from the queue. If it is marked as cancelled,\nit is resolved immediately, else it is marked as the current request and the command\nsent to the worker. As events occurs on the current request the event handler is\ninvoked. When the response is received this is used to resolve the promise and\ncomplete the request.\n*/\n/**\n * Function to create the proxy for a type. To be used from the main thread.\n *\n * @param postMessage A function to post messages to the worker\n * @param terminator A function to call to tear down the worker thread\n * @param methods A map of method names to be proxied and some metadata @see MethodMap\n * @returns The proxy object. The caller should then set the onMsgFromWorker\n * property to a callback that will receive messages from the worker.\n */\nexport function createProxyInternal(postMessage, terminator, methods) {\n    const queue = [];\n    const eventTarget = new EventTarget();\n    let curr;\n    let state = \"idle\";\n    function setState(newState) {\n        if (state === newState)\n            return;\n        state = newState;\n        if (proxy.onstatechange)\n            proxy.onstatechange(state);\n    }\n    function queueRequest(msg, requestEventTarget, cancellationToken) {\n        return new Promise((resolve, reject) => {\n            queue.push({\n                type: msg.type,\n                args: msg.args,\n                resolve,\n                reject,\n                requestEventTarget,\n                cancellationToken,\n            });\n            // If nothing was running when this got added, kick off processing\n            if (queue.length === 1)\n                doNextRequest();\n        });\n    }\n    function doNextRequest() {\n        if (curr)\n            return;\n        while ((curr = queue.shift())) {\n            if (curr.cancellationToken?.isCancellationRequested) {\n                curr.reject(\"cancelled\");\n                continue;\n            }\n            else {\n                break;\n            }\n        }\n        if (!curr) {\n            // Nothing else queued, signal that we're now idle and exit.\n            log.debug(\"Proxy: Worker queue is empty\");\n            setState(\"idle\");\n            return;\n        }\n        const msg = { type: curr.type, args: curr.args };\n        if (methods[curr.type] === \"requestWithProgress\") {\n            setState(\"busy\");\n        }\n        log.debug(\"Proxy: Posting message to worker: %o\", msg);\n        postMessage(msg);\n    }\n    function onMsgFromWorker(msg) {\n        if (log.getLogLevel() >= 4)\n            log.debug(\"Proxy: Received message from worker: %s\", JSON.stringify(msg));\n        if (msg.messageType === \"common-event\") {\n            const commonEvent = msg; // assignment is necessary here for TypeScript to narrow the type\n            switch (commonEvent.type) {\n                case \"telemetry-event\":\n                    {\n                        const detail = commonEvent.detail;\n                        log.logTelemetry(detail);\n                    }\n                    break;\n                case \"log\":\n                    {\n                        const detail = commonEvent.detail;\n                        log.logWithLevel(detail.level, detail.target, ...detail.data);\n                    }\n                    break;\n            }\n        }\n        else if (msg.messageType === \"event\") {\n            const event = new Event(msg.type);\n            event.detail = msg.detail;\n            log.debug(\"Proxy: Posting event: %o\", msg);\n            // Post to a currently attached event target if there's a \"requestWithProgress\"\n            // in progress\n            curr?.requestEventTarget?.dispatchEvent(event);\n            // Also post to the general event target\n            eventTarget.dispatchEvent(event);\n        }\n        else if (msg.messageType === \"response\") {\n            if (!curr) {\n                log.error(\"Proxy: No active request when message received: %o\", msg);\n                return;\n            }\n            const result = {\n                success: msg.result.success,\n                data: msg.result.success ? msg.result.result : msg.result.error,\n            };\n            if (result.success) {\n                curr.resolve(result.data);\n                curr = undefined;\n                doNextRequest();\n            }\n            else {\n                curr.reject(result.data);\n                curr = undefined;\n                doNextRequest();\n            }\n        }\n    }\n    // Create the proxy object to be returned\n    const proxy = {};\n    // Assign each method with the desired proxying behavior\n    for (const methodName of Object.keys(methods)) {\n        // @ts-expect-error - tricky to derive the type of the actual method here\n        proxy[methodName] = (...args) => {\n            let requestEventTarget = undefined;\n            switch (methods[methodName]) {\n                case \"addEventListener\":\n                    {\n                        // @ts-expect-error - can't get the typing of the rest parameters quite right\n                        eventTarget.addEventListener(...args);\n                    }\n                    break;\n                case \"removeEventListener\":\n                    {\n                        // @ts-expect-error - can't get the typing of the rest parameters quite right\n                        eventTarget.removeEventListener(...args);\n                    }\n                    break;\n                case \"requestWithProgress\": {\n                    // For progress methods, the last argument is the event target\n                    requestEventTarget = args[args.length - 1];\n                    args = args.slice(0, args.length - 1);\n                }\n                // fallthrough\n                case \"request\": {\n                    return queueRequest({ type: methodName, args }, requestEventTarget);\n                }\n            }\n        };\n    }\n    proxy.onstatechange = null;\n    proxy.terminate = () => {\n        // Kill the worker without a chance to shutdown. May be needed if it is not responding.\n        log.info(\"Proxy: Terminating the worker\");\n        if (curr) {\n            log.debug(\"Proxy: Terminating running worker item of type: %s\", curr.type);\n            curr.reject(\"terminated\");\n        }\n        // Reject any outstanding items\n        while (queue.length) {\n            const item = queue.shift();\n            log.debug(\"Proxy: Terminating outstanding work item of type: %s\", item?.type);\n            item?.reject(\"terminated\");\n        }\n        terminator();\n    };\n    proxy.onMsgFromWorker = onMsgFromWorker;\n    return proxy;\n}\n/**\n * Function to wrap a service in a dispatcher. To be used in the worker thread.\n *\n * @param service The service to be wrapped\n * @param methods A map of method names. Should match the list passed into @see createProxyInternal.\n * @param eventNames The list of event names that the service can emit\n * @param postMessage A function to post messages back to the main thread\n * @returns A function that takes a message and invokes the corresponding\n * method on the service. The caller should then set this method as a message handler.\n */\nfunction createDispatcher(postMessage, service, methods, eventNames) {\n    log.debug(\"Worker: Constructing WorkerEventHandler\");\n    function logAndPost(msg) {\n        log.debug(\"Worker: Sending %s message from worker: %o\", msg.messageType, msg);\n        postMessage(msg);\n    }\n    const eventTarget = new EventTarget();\n    eventNames.forEach((eventName) => {\n        // Subscribe to all known events and forward them as messages to the main thread.\n        eventTarget.addEventListener(eventName, (ev) => {\n            logAndPost({\n                messageType: \"event\",\n                type: ev.type,\n                detail: ev.detail,\n            });\n        });\n        // If there's an addEventListener on the object itself, forward those events as well.\n        if (service.addEventListener) {\n            service.addEventListener(eventName, (ev) => {\n                logAndPost({\n                    messageType: \"event\",\n                    type: ev.type,\n                    detail: ev.detail,\n                });\n            });\n        }\n    });\n    return function invokeMethod(req) {\n        // Pass the eventTarget to the methods marked as taking progress\n        return service[req.type]\n            .call(service, ...req.args, methods[req.type] === \"requestWithProgress\" ? eventTarget : undefined)\n            .then((result) => logAndPost({\n            messageType: \"response\",\n            type: req.type,\n            result: { success: true, result },\n        }))\n            .catch((err) => logAndPost({\n            // If this happens then the wasm code likely threw an exception/panicked rather than\n            // completing gracefully and fullfilling the promise. Communicate to the client\n            // that there was an error and it should reject the current request\n            messageType: \"response\",\n            type: req.type,\n            result: { success: false, error: err },\n        }));\n    };\n}\n/**\n * Creates and initializes the actual service. To be used in the worker thread.\n *\n * @param postMessage A function to post messages back to the main thread\n * @param serviceProtocol An object that describes the service: its constructor, methods and events\n * @param wasm The wasm module to initialize the service with\n * @param qscLogLevel The log level to initialize the service with\n * @returns A function that takes a message and invokes the corresponding\n * method on the service. The caller should then set this method as a message handler.\n */\nexport function initService(postMessage, serviceProtocol, wasm, qscLogLevel) {\n    function postTelemetryMessage(telemetry) {\n        postMessage({\n            messageType: \"common-event\",\n            type: \"telemetry-event\",\n            detail: telemetry,\n        });\n    }\n    function postLogMessage(level, target, ...args) {\n        if (log.getLogLevel() < level) {\n            return;\n        }\n        let data = args;\n        try {\n            // Only structured cloneable objects can be sent in worker messages.\n            // Test if this is the case.\n            structuredClone(args);\n        }\n        catch {\n            // Uncloneable object.\n            // Use String(args) instead of ${args} to handle all possible values\n            // without throwing. See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_coercion\n            data = [\"unsupported log data \" + String(args)];\n        }\n        postMessage({\n            messageType: \"common-event\",\n            type: \"log\",\n            detail: { level, target, data },\n        });\n    }\n    // Override the global logger\n    log.error = (...args) => postLogMessage(1, \"worker\", ...args);\n    log.warn = (...args) => postLogMessage(2, \"worker\", ...args);\n    log.info = (...args) => postLogMessage(3, \"worker\", ...args);\n    log.debug = (...args) => postLogMessage(4, \"worker\", ...args);\n    log.trace = (...args) => postLogMessage(5, \"worker\", ...args);\n    if (qscLogLevel !== undefined) {\n        log.setLogLevel(qscLogLevel);\n    }\n    // Set up logging and telemetry as soon as possible after instantiating\n    log.onLevelChanged = (level) => wasm.setLogLevel(level);\n    log.setTelemetryCollector(postTelemetryMessage);\n    wasm.initLogging(postLogMessage, log.getLogLevel());\n    // Create the actual service and return the dispatcher method\n    const service = new serviceProtocol.class(wasm);\n    return createDispatcher(postMessage, service, serviceProtocol.methods, serviceProtocol.eventNames);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as wasm from \"../../lib/web/qsc_wasm.js\";\nimport { log } from \"../log.js\";\nimport { createProxyInternal, initService, } from \"./common.js\";\n/**\n * Creates an initializes a service, setting it up to receive requests.\n * This function to be is used in the worker.\n *\n * @param serviceProtocol An object that describes the service: its constructor, methods and events\n * @returns A message handler to be assigned to the `self.onmessage` handler in a web worker\n */\nexport function createWorker(serviceProtocol) {\n    let invokeService = null;\n    // This export should be assigned to 'self.onmessage' in a WebWorker\n    return function messageHandler(e) {\n        const data = e.data;\n        if (!data.type || typeof data.type !== \"string\") {\n            log.error(`Unrecognized msg: ${data}`);\n            return;\n        }\n        switch (data.type) {\n            case \"init\":\n                {\n                    wasm.initSync({ module: data.wasmModule });\n                    invokeService = initService(self.postMessage.bind(self), serviceProtocol, wasm, data.qscLogLevel);\n                }\n                break;\n            default:\n                if (!invokeService) {\n                    log.error(`Received message before the service was initialized: %o`, data);\n                }\n                else {\n                    invokeService(data);\n                }\n        }\n    };\n}\n/**\n * Creates and initializes a service in a web worker, and returns a proxy for the service\n * to be used from the main thread.\n *\n * @param workerArg The service web worker or the URL of the web worker script.\n * @param wasmModule The wasm module to initialize the service with\n * @param serviceProtocol An object that describes the service: its constructor, methods and events\n * @returns A proxy object that implements the service interface.\n *   This interface can now be used as if calling into the real service,\n *   and the calls will be proxied to the web worker.\n */\nexport function createProxy(workerArg, wasmModule, serviceProtocol) {\n    // Create or use the WebWorker\n    const worker = typeof workerArg === \"string\" ? new Worker(workerArg) : workerArg;\n    // Send it the Wasm module to instantiate\n    worker.postMessage({\n        type: \"init\",\n        wasmModule,\n        qscLogLevel: log.getLogLevel(),\n    });\n    // If you lose the 'this' binding, some environments have issues\n    const postMessage = worker.postMessage.bind(worker);\n    const onTerminate = () => worker.terminate();\n    // Create the proxy which will forward method calls to the worker\n    const proxy = createProxyInternal(postMessage, onTerminate, serviceProtocol.methods);\n    // Let proxy handle response and event messages from the worker\n    worker.onmessage = (ev) => proxy.onMsgFromWorker(ev.data);\n    return proxy;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction outputAsResult(msg) {\n    try {\n        const obj = JSON.parse(msg);\n        if (obj?.type == \"Result\" && typeof obj.success == \"boolean\") {\n            return {\n                type: \"Result\",\n                result: {\n                    success: obj.success,\n                    value: obj.result,\n                },\n            };\n        }\n    }\n    catch {\n        return null;\n    }\n    return null;\n}\nfunction outputAsMessage(msg) {\n    try {\n        const obj = JSON.parse(msg);\n        if (obj?.type == \"Message\" && typeof obj.message == \"string\") {\n            return obj;\n        }\n    }\n    catch {\n        return null;\n    }\n    return null;\n}\nfunction outputAsDump(msg) {\n    try {\n        const obj = JSON.parse(msg);\n        if (obj?.type == \"DumpMachine\" && typeof obj.state == \"object\") {\n            return obj;\n        }\n    }\n    catch {\n        return null;\n    }\n    return null;\n}\nfunction outputAsMatrix(msg) {\n    try {\n        const obj = JSON.parse(msg);\n        if (obj?.type == \"Matrix\" && Array.isArray(obj.matrix)) {\n            return obj;\n        }\n    }\n    catch {\n        return null;\n    }\n    return null;\n}\nexport function eventStringToMsg(msg) {\n    return (outputAsResult(msg) ||\n        outputAsMessage(msg) ||\n        outputAsDump(msg) ||\n        outputAsMatrix(msg));\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { log } from \"../log.js\";\n// Convenience method that also provides type safety\nexport function makeEvent(type, detail) {\n    const event = new Event(type);\n    event.detail = detail;\n    return event;\n}\nfunction makeResultObj() {\n    return { success: false, result: \"\", events: [] };\n}\nexport class QscEventTarget {\n    // Overrides for the base EventTarget methods to limit to expected event types\n    addEventListener(type, listener) {\n        this.eventTarget.addEventListener(type, listener);\n    }\n    removeEventListener(type, listener) {\n        this.eventTarget.removeEventListener(type, listener);\n    }\n    dispatchEvent(event) {\n        if (log.getLogLevel() >= 4)\n            log.debug(\"Dispatching event: %o\", event);\n        return this.eventTarget.dispatchEvent(event);\n    }\n    /**\n     * @param captureEvents Set to true if this instance should record events internally\n     */\n    constructor(captureEvents) {\n        this.eventTarget = new EventTarget();\n        this.results = [];\n        this.shotActive = false;\n        this.animationFrameId = 0;\n        if (captureEvents) {\n            this.addEventListener(\"Message\", (ev) => this.onMessage(ev.detail));\n            this.addEventListener(\"DumpMachine\", (ev) => this.onDumpMachine(ev.detail));\n            this.addEventListener(\"Result\", (ev) => this.onResult(ev.detail));\n            this.addEventListener(\"Matrix\", (ev) => this.onMatrix(ev.detail));\n        }\n    }\n    onMessage(msg) {\n        this.ensureActiveShot();\n        const shotIdx = this.results.length - 1;\n        this.results[shotIdx].events.push({ type: \"Message\", message: msg });\n        this.queueUiRefresh();\n    }\n    onMatrix(detail) {\n        this.ensureActiveShot();\n        const shotIdx = this.results.length - 1;\n        this.results[shotIdx].events.push({\n            type: \"Matrix\",\n            matrix: detail.matrix,\n            matrixLatex: detail.matrixLatex,\n        });\n        this.queueUiRefresh();\n    }\n    onDumpMachine(detail) {\n        this.ensureActiveShot();\n        const shotIdx = this.results.length - 1;\n        this.results[shotIdx].events.push({\n            type: \"DumpMachine\",\n            state: detail.state,\n            stateLatex: detail.stateLatex,\n            qubitCount: detail.qubitCount,\n        });\n        this.queueUiRefresh();\n    }\n    onResult(result) {\n        this.ensureActiveShot();\n        const shotIdx = this.results.length - 1;\n        this.results[shotIdx].success = result.success;\n        this.results[shotIdx].result = result.value;\n        this.shotActive = false;\n        this.queueUiRefresh();\n    }\n    ensureActiveShot() {\n        if (!this.shotActive) {\n            this.results.push(makeResultObj());\n            this.shotActive = true;\n        }\n    }\n    queueUiRefresh() {\n        if (!this.animationFrameId) {\n            this.animationFrameId = setTimeout(() => {\n                this.onUiRefresh();\n            }, 50); // 20 fps is plenty for the rendering we do\n        }\n    }\n    onUiRefresh() {\n        this.animationFrameId = 0;\n        const uiRefreshEvent = new Event(\"uiResultsRefresh\");\n        this.dispatchEvent(uiRefreshEvent);\n    }\n    getResults() {\n        return this.results;\n    }\n    resultCount() {\n        // May be one less than length if the last is still in flight\n        return this.shotActive ? this.results.length - 1 : this.results.length;\n    }\n    clearResults() {\n        this.results = [];\n        this.shotActive = false;\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { log } from \"../log.js\";\nimport { eventStringToMsg } from \"./common.js\";\nimport { makeEvent, } from \"./events.js\";\nexport class Compiler {\n    constructor(wasm) {\n        log.info(\"Constructing a Compiler instance\");\n        this.wasm = wasm;\n        globalThis.qscGitHash = this.wasm.git_hash();\n    }\n    // Note: This function does not support project mode.\n    // see https://github.com/microsoft/qsharp/pull/849#discussion_r1409821143\n    async checkCode(code) {\n        let diags = [];\n        const languageService = new this.wasm.LanguageService();\n        const work = languageService.start_background_work((uri, version, errors) => {\n            diags = errors;\n        }, () => {\n            // do nothing; test callables are not reported in checkCode\n        }, {\n            readFile: async () => null,\n            listDirectory: async () => [],\n            resolvePath: async () => null,\n            fetchGithub: async () => \"\",\n            findManifestDirectory: async () => null,\n        });\n        languageService.update_document(\"code\", 1, code);\n        // Yield to let the language service background worker handle the update\n        await Promise.resolve();\n        languageService.stop_background_work();\n        await work;\n        languageService.free();\n        return diags;\n    }\n    async getAst(code, languageFeatures, profile) {\n        return this.wasm.get_ast(code, languageFeatures, profile);\n    }\n    async getHir(code, languageFeatures, profile) {\n        return this.wasm.get_hir(code, languageFeatures, profile);\n    }\n    async getRir(program) {\n        const config = toWasmProgramConfig(program, program.profile || \"adaptive_ri\");\n        return this.wasm.get_rir(config);\n    }\n    async run(program, expr, shots, eventHandler) {\n        // All results are communicated as events, but if there is a compiler error (e.g. an invalid\n        // entry expression or similar), it may throw on run. The caller should expect this promise\n        // may reject without all shots running or events firing.\n        this.wasm.run(toWasmProgramConfig(program, \"unrestricted\"), expr, (msg) => onCompilerEvent(msg, eventHandler), shots);\n    }\n    async runWithPauliNoise(program, expr, shots, pauliNoise, eventHandler) {\n        this.wasm.runWithPauliNoise(toWasmProgramConfig(program, \"unrestricted\"), expr, (msg) => onCompilerEvent(msg, eventHandler), shots, pauliNoise);\n    }\n    async getQir(program) {\n        return this.wasm.get_qir(toWasmProgramConfig(program, \"base\"));\n    }\n    async getEstimates(program, params) {\n        return this.wasm.get_estimates(toWasmProgramConfig(program, \"unrestricted\"), params);\n    }\n    async getCircuit(program, simulate, operation) {\n        return this.wasm.get_circuit(toWasmProgramConfig(program, \"unrestricted\"), simulate, operation);\n    }\n    // Returns all autogenerated documentation files for the standard library\n    // and loaded project (if requested). This include file names and metadata,\n    // including specially formatted table of content file.\n    async getDocumentation(additionalProgram) {\n        return this.wasm.generate_docs(additionalProgram &&\n            toWasmProgramConfig(additionalProgram, \"unrestricted\"));\n    }\n    async checkExerciseSolution(userCode, exerciseSources, eventHandler) {\n        const success = this.wasm.check_exercise_solution(userCode, exerciseSources, (msg) => onCompilerEvent(msg, eventHandler));\n        return success;\n    }\n}\n/**\n * Fills in the defaults, to convert from the backwards-compatible ProgramConfig,\n * to the IProgramConfig type that the wasm layer expects\n */\nexport function toWasmProgramConfig(program, defaultProfile) {\n    let packageGraphSources;\n    if (\"sources\" in program) {\n        // The simpler type is used, where there are no dependencies and only a list\n        // of sources is passed in.\n        packageGraphSources = {\n            root: {\n                sources: program.sources,\n                languageFeatures: program.languageFeatures || [],\n                dependencies: {},\n            },\n            packages: {},\n        };\n    }\n    else {\n        // A full package graph is passed in.\n        packageGraphSources = program.packageGraphSources;\n    }\n    return { packageGraphSources, profile: program.profile || defaultProfile };\n}\nexport function onCompilerEvent(msg, eventTarget) {\n    const qscMsg = eventStringToMsg(msg);\n    if (!qscMsg) {\n        log.error(\"Unknown event message: %s\", msg);\n        return;\n    }\n    let qscEvent;\n    const msgType = qscMsg.type;\n    switch (msgType) {\n        case \"Message\":\n            qscEvent = makeEvent(\"Message\", qscMsg.message);\n            break;\n        case \"DumpMachine\":\n            qscEvent = makeEvent(\"DumpMachine\", {\n                state: qscMsg.state,\n                stateLatex: qscMsg.stateLatex,\n                qubitCount: qscMsg.qubitCount,\n            });\n            break;\n        case \"Result\":\n            qscEvent = makeEvent(\"Result\", qscMsg.result);\n            break;\n        case \"Matrix\":\n            qscEvent = makeEvent(\"Matrix\", {\n                matrix: qscMsg.matrix,\n                matrixLatex: qscMsg.matrixLatex,\n            });\n            break;\n        default:\n            log.never(msgType);\n            throw \"Unexpected message type\";\n    }\n    log.debug(\"worker dispatching event \" + JSON.stringify(qscEvent));\n    eventTarget.dispatchEvent(qscEvent);\n}\n/** The protocol definition to allow running the compiler in a worker. */\nexport const compilerProtocol = {\n    class: Compiler,\n    methods: {\n        checkCode: \"request\",\n        getAst: \"request\",\n        getHir: \"request\",\n        getRir: \"request\",\n        getQir: \"request\",\n        getEstimates: \"request\",\n        getCircuit: \"request\",\n        getDocumentation: \"request\",\n        run: \"requestWithProgress\",\n        runWithPauliNoise: \"requestWithProgress\",\n        checkExerciseSolution: \"requestWithProgress\",\n    },\n    eventNames: [\"DumpMachine\", \"Matrix\", \"Message\", \"Result\"],\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createWorker } from \"../workers/browser.js\";\nimport { compilerProtocol } from \"./compiler.js\";\n// This export should be assigned to 'self.onmessage' in a WebWorker\nexport const messageHandler = createWorker(compilerProtocol);\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { messageHandler } from \"qsharp-lang/compiler-worker\";\n\nself.onmessage = messageHandler;\n"],
  "mappings": "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",
  "names": ["ptr", "module", "arg0", "arg1", "wasm", "messageHandler", "wasm"]
}
