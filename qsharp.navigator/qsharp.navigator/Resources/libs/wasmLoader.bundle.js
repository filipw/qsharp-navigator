(()=>{var b,R=new Array(128).fill(void 0);R.push(void 0,null,!0,!1);var v=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},V=typeof v.encodeInto=="function"?function(t,e){return v.encodeInto(t,e)}:function(t,e){let n=v.encode(t);return e.set(n),{read:t.length,written:n.length}};var Y=R.length;var L=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&L.decode();var K=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(t=>{b.__wbindgen_export_3.get(t.dtor)(t.a,t.b)});var N=Object.freeze({BreakpointHit:0,0:"BreakpointHit",Next:1,1:"Next",StepIn:2,2:"StepIn",StepOut:3,3:"StepOut",Return:4,4:"Return"}),ee=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(t=>b.__wbg_debugservice_free(t>>>0,1));var te=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(t=>b.__wbg_languageservice_free(t>>>0,1));var ne=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(t=>b.__wbg_projectloader_free(t>>>0,1));var x=null,z=["off","error","warn","info","debug","trace"],d=0,i={setLogLevel(t){if(typeof t=="string"){let e=t.toLowerCase(),n=0;z.forEach((r,s)=>{r===e&&(n=s)}),d=n}else d=t;this.onLevelChanged?.(d)},onLevelChanged:null,getLogLevel(){return d},error(...t){d>=1&&console.error(...t)},warn(...t){d>=2&&console.warn(...t)},info(...t){d>=3&&console.info(...t)},debug(...t){d>=4&&console.debug(...t)},trace(...t){d>=5&&console.debug(...t)},never(t){i.error("Exhaustive type checking didn't account for: %o",t)},logWithLevel(t,e,...n){let[r,...s]=n,o=[`[${e||""}] ${r}`,...s];switch(t){case 1:i.error(...o);break;case 2:i.warn(...o);break;case 3:i.info(...o);break;case 4:i.debug(...o);break;case 5:i.trace(...o);break;default:i.error("Invalid logLevel: ",t)}},setTelemetryCollector(t){x=t},logTelemetry(t){x?.(t)},isTelemetryEnabled(){return!!x}};globalThis.qscLog=i;function O(t){try{let e=JSON.parse(t);if(e?.type=="Result"&&typeof e.success=="boolean")return{type:"Result",result:{success:e.success,value:e.result}}}catch{return null}return null}function W(t){try{let e=JSON.parse(t);if(e?.type=="Message"&&typeof e.message=="string")return e}catch{return null}return null}function H(t){try{let e=JSON.parse(t);if(e?.type=="DumpMachine"&&typeof e.state=="object")return e}catch{return null}return null}function j(t){try{let e=JSON.parse(t);if(e?.type=="Matrix"&&Array.isArray(e.matrix))return e}catch{return null}return null}function q(t){return O(t)||W(t)||H(t)||j(t)}function f(t,e){let n=new Event(t);return n.detail=e,n}var _=class{constructor(e){i.info("Constructing a Compiler instance"),this.wasm=e,globalThis.qscGitHash=this.wasm.git_hash()}async checkCode(e){let n=[],r=new this.wasm.LanguageService,s=r.start_background_work((o,c,p)=>{n=p},()=>{},{readFile:async()=>null,listDirectory:async()=>[],resolvePath:async()=>null,fetchGithub:async()=>"",findManifestDirectory:async()=>null});return r.update_document("code",1,e),await Promise.resolve(),r.stop_background_work(),await s,r.free(),n}async getAst(e,n,r){return this.wasm.get_ast(e,n,r)}async getHir(e,n,r){return this.wasm.get_hir(e,n,r)}async getRir(e){let n=g(e,e.profile||"adaptive_ri");return this.wasm.get_rir(n)}async run(e,n,r,s){this.wasm.run(g(e,"unrestricted"),n,o=>S(o,s),r)}async runWithPauliNoise(e,n,r,s,o){this.wasm.runWithPauliNoise(g(e,"unrestricted"),n,c=>S(c,o),r,s)}async getQir(e){return this.wasm.get_qir(g(e,"base"))}async getEstimates(e,n){return this.wasm.get_estimates(g(e,"unrestricted"),n)}async getCircuit(e,n,r){return this.wasm.get_circuit(g(e,"unrestricted"),n,r)}async getDocumentation(e){return this.wasm.generate_docs(e&&g(e,"unrestricted"))}async checkExerciseSolution(e,n,r){return this.wasm.check_exercise_solution(e,n,o=>S(o,r))}};function g(t,e){let n;return"sources"in t?n={root:{sources:t.sources,languageFeatures:t.languageFeatures||[],dependencies:{}},packages:{}}:n=t.packageGraphSources,{packageGraphSources:n,profile:t.profile||e}}function S(t,e){let n=q(t);if(!n){i.error("Unknown event message: %s",t);return}let r,s=n.type;switch(s){case"Message":r=f("Message",n.message);break;case"DumpMachine":r=f("DumpMachine",{state:n.state,stateLatex:n.stateLatex,qubitCount:n.qubitCount});break;case"Result":r=f("Result",n.result);break;case"Matrix":r=f("Matrix",{matrix:n.matrix,matrixLatex:n.matrixLatex});break;default:throw i.never(s),"Unexpected message type"}i.debug("worker dispatching event "+JSON.stringify(r)),e.dispatchEvent(r)}var M={class:_,methods:{checkCode:"request",getAst:"request",getHir:"request",getRir:"request",getQir:"request",getEstimates:"request",getCircuit:"request",getDocumentation:"request",run:"requestWithProgress",runWithPauliNoise:"requestWithProgress",checkExerciseSolution:"requestWithProgress"},eventNames:["DumpMachine","Matrix","Message","Result"]};var w=class{constructor(e,n={readFile:async()=>null,listDirectory:async()=>[],resolvePath:async()=>null,fetchGithub:async()=>"",findManifestDirectory:async()=>null}){this.wasm=e,this.eventHandler=new EventTarget,i.info("Constructing a QSharpLanguageService instance"),this.languageService=new e.LanguageService,this.backgroundWork=this.languageService.start_background_work(this.onDiagnostics.bind(this),this.onTestCallables.bind(this),n)}async updateConfiguration(e){this.languageService.update_configuration(e)}async updateDocument(e,n,r){this.languageService.update_document(e,n,r)}async updateNotebookDocument(e,n,r,s){this.languageService.update_notebook_document(e,r,s)}async closeDocument(e){this.languageService.close_document(e)}async closeNotebookDocument(e){this.languageService.close_notebook_document(e)}async getCodeActions(e,n){return this.languageService.get_code_actions(e,n)}async getCompletions(e,n){return await new Promise(r=>setTimeout(r,50)),this.languageService.get_completions(e,n)}async getFormatChanges(e){return this.languageService.get_format_changes(e)}async getHover(e,n){return this.languageService.get_hover(e,n)}async getDefinition(e,n){return this.languageService.get_definition(e,n)}async getReferences(e,n,r){return this.languageService.get_references(e,n,r)}async getSignatureHelp(e,n){return this.languageService.get_signature_help(e,n)}async getRename(e,n,r){return this.languageService.get_rename(e,n,r)}async prepareRename(e,n){return this.languageService.prepare_rename(e,n)}async getCodeLenses(e){return this.languageService.get_code_lenses(e)}async dispose(){this.languageService.stop_background_work(),await this.backgroundWork,this.languageService.free()}addEventListener(e,n){this.eventHandler.addEventListener(e,n)}removeEventListener(e,n){this.eventHandler.removeEventListener(e,n)}async onDiagnostics(e,n,r){try{let s=new Event("diagnostics");s.detail={uri:e,version:n??0,diagnostics:r},this.eventHandler.dispatchEvent(s)}catch(s){i.error("Error in onDiagnostics",s)}}async onTestCallables(e){try{let n=new Event("testCallables");n.detail={callables:e},this.eventHandler.dispatchEvent(n)}catch(n){i.error("Error in onTestCallables",n)}}},T={class:w,methods:{updateConfiguration:"request",updateDocument:"request",updateNotebookDocument:"request",closeDocument:"request",closeNotebookDocument:"request",getCodeActions:"request",getCompletions:"request",getFormatChanges:"request",getHover:"request",getDefinition:"request",getReferences:"request",getSignatureHelp:"request",getRename:"request",prepareRename:"request",getCodeLenses:"request",dispose:"request",addEventListener:"addEventListener",removeEventListener:"removeEventListener"},eventNames:["diagnostics"]};function C(t,e,n){let r=[],s=new EventTarget,o,c="idle";function p(a){c!==a&&(c=a,h.onstatechange&&h.onstatechange(c))}function E(a,u,l){return new Promise((F,U)=>{r.push({type:a.type,args:a.args,resolve:F,reject:U,requestEventTarget:u,cancellationToken:l}),r.length===1&&y()})}function y(){if(o)return;for(;(o=r.shift())&&o.cancellationToken?.isCancellationRequested;){o.reject("cancelled");continue}if(!o){i.debug("Proxy: Worker queue is empty"),p("idle");return}let a={type:o.type,args:o.args};n[o.type]==="requestWithProgress"&&p("busy"),i.debug("Proxy: Posting message to worker: %o",a),t(a)}function D(a){if(i.getLogLevel()>=4&&i.debug("Proxy: Received message from worker: %s",JSON.stringify(a)),a.messageType==="common-event"){let u=a;switch(u.type){case"telemetry-event":{let l=u.detail;i.logTelemetry(l)}break;case"log":{let l=u.detail;i.logWithLevel(l.level,l.target,...l.data)}break}}else if(a.messageType==="event"){let u=new Event(a.type);u.detail=a.detail,i.debug("Proxy: Posting event: %o",a),o?.requestEventTarget?.dispatchEvent(u),s.dispatchEvent(u)}else if(a.messageType==="response"){if(!o){i.error("Proxy: No active request when message received: %o",a);return}let u={success:a.result.success,data:a.result.success?a.result.result:a.result.error};u.success?(o.resolve(u.data),o=void 0,y()):(o.reject(u.data),o=void 0,y())}}let h={};for(let a of Object.keys(n))h[a]=(...u)=>{let l;switch(n[a]){case"addEventListener":s.addEventListener(...u);break;case"removeEventListener":s.removeEventListener(...u);break;case"requestWithProgress":l=u[u.length-1],u=u.slice(0,u.length-1);case"request":return E({type:a,args:u},l)}};return h.onstatechange=null,h.terminate=()=>{for(i.info("Proxy: Terminating the worker"),o&&(i.debug("Proxy: Terminating running worker item of type: %s",o.type),o.reject("terminated"));r.length;){let a=r.shift();i.debug("Proxy: Terminating outstanding work item of type: %s",a?.type),a?.reject("terminated")}e()},h.onMsgFromWorker=D,h}function I(t,e,n){let r=typeof t=="string"?new Worker(t):t;r.postMessage({type:"init",wasmModule:e,qscLogLevel:i.getLogLevel()});let s=r.postMessage.bind(r),c=C(s,()=>r.terminate(),n.methods);return r.onmessage=p=>c.onMsgFromWorker(p.data),c}var m=null,A=null;async function $(t){if(typeof t=="string"){i.info("Fetching wasm module from %s",t),performance.mark("fetch-wasm-start");let n=await(await fetch(t)).arrayBuffer(),r=performance.measure("fetch-wasm","fetch-wasm-start");i.logTelemetry({id:"fetch-wasm",data:{duration:r.duration,uri:t}}),m=await WebAssembly.compile(n)}else i.info("Compiling wasm module from provided buffer"),m=await WebAssembly.compile(t)}function B(t){return A||(A=$(t)),A}function Q(t){if(!m)throw"Wasm module must be loaded first";return I(t,m,M)}function P(t){if(!m)throw"Wasm module must be loaded first";return I(t,m,T)}i.setLogLevel("info");var Z="http://localhost:8080/qsharp/qsc_wasm_bg.wasm",X="http://localhost:8080/language-service-worker.js",J="http://localhost:8080/compiler-worker.js";B(Z).then(()=>{console.log("WASM module loaded successfully");let t=P(X),e=Q(J);window.qsharpLanguageService=t,window.qsharpCompiler=e,console.log("Language service and compiler workers initialized.")}).catch(t=>{console.error("Failed to load WASM module",t)});})();
